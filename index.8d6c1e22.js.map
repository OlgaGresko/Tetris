{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_define_property.js","src/game.js","<<jsx-config-pragma.js>>","src/view.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export default class Game {\n  score = 0;\n  lines = 0;\n  level = 0;\n  playfield = this.createPlayfield();\n  activePiece = this.createPiece();\n  nextPiece = this.createPiece();\n\n  getState() {\n    const playfield = this.createPlayfield();\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < this.playfield.length; y++) {\n      playfield[y] = [];\n\n      for (let x = 0; x < this.playfield[y].length; x++) {\n        playfield[y][x] = this.playfield[y][x];\n      }\n    }\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks[y].length; x++) {\n        if (blocks[y][x]) {\n          playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n\n    return {\n      playfield,\n    };\n  }\n\n  createPlayfield() {\n    const playfield = [];\n\n    for (let y = 0; y < 20; y++) {\n      playfield[y] = [];\n\n      for (let x = 0; x < 10; x++) {\n        playfield[y][x] = 0;\n      }\n    }\n\n    return playfield;\n  }\n\n  createPiece() {\n    const index = Math.floor(Math.random() * 7);\n    const type = 'IJLOSTZ'[index];\n    const piece = {};\n\n    switch (type) {\n      case 'I':\n        piece.blocks = [\n          [0, 0, 0, 0],\n          [1, 1, 1, 1],\n          [0, 0, 0, 0],\n          [0, 0, 0, 0],\n        ];\n        break;\n      case 'J':\n        piece.blocks = [\n          [0, 0, 0],\n          [2, 2, 2],\n          [0, 0, 2],\n        ];\n        break;\n      case 'L':\n        piece.blocks = [\n          [0, 0, 0],\n          [3, 3, 3],\n          [3, 0, 0]\n        ];\n        break;\n      case 'O':\n        piece.blocks = [\n          [0, 0, 0, 0],\n          [0, 4, 4, 0],\n          [0, 4, 4, 0],\n          [0, 0, 0, 0]\n        ];\n        break;\n      case 'S':\n        piece.blocks = [\n          [0, 0, 0],\n          [0, 5, 5],\n          [5, 5, 0]\n        ];\n        break;\n      case 'T':\n        piece.blocks = [\n          [0, 0, 0],\n          [6, 6, 6],\n          [0, 6, 0]\n        ];\n        break;\n      case 'Z':\n        piece.blocks = [\n          [0, 0, 0],\n          [7, 7, 0],\n          [0, 7, 7]\n        ];\n        break;\n      default:\n        throw new Error('Unknown type of figure');\n    };\n\n    piece.x = Math.floor((10 - piece.blocks[0].length) / 2);\n    piece.y = 0;\n\n    return piece;\n  }\n\n  movePieceLeft() {\n    this.activePiece.x -= 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x += 1;\n    }\n  }\n\n  movePieceRight() {\n    this.activePiece.x += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x -= 1;\n    }\n  }\n\n  movePieceDown() {\n    this.activePiece.y += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.y -= 1;\n      this.lockPiece();\n      this.updatePieces();\n    }\n  }\n\n  rotatePiece() {\n    this.rotateBlocks();\n\n    if (this.hasCollision()) {\n      this.rotateBlocks(false);\n    }\n  }\n\n  rotateBlocks(clockwise = true) {\n    const blocks = this.activePiece.blocks;\n    const length = blocks.length;\n    const x = Math.floor(length / 2);\n    const y = length - 1;\n\n    for (let i = 0; i < x; i++) {\n      for (let j = i; j < y - i; j++) {\n        const temp = blocks[i][j];\n\n        if (clockwise) {\n          blocks[i][j] = blocks[y - j][i];\n          blocks[y - j][i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[j][y - i];\n          blocks[j][y - i] = temp;\n        } else {\n          blocks[i][j] = blocks[j][y - i];\n          blocks[j][y - i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[y - j][i];\n          blocks[y - j][i] = temp;\n        }\n      }\n    }\n  }\n\n  hasCollision() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (\n          blocks[y][x] &&\n          (this.playfield[pieceY + y] === undefined ||\n            this.playfield[pieceY + y][pieceX + x] === undefined ||\n            this.playfield[pieceY + y][pieceX + x])\n        ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  lockPiece() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (blocks[y][x]) {\n          this.playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n  }\n\n  updatePieces() {\n    this.activePiece = this.nextPiece;\n    this.nextPiece = this.createPiece();\n  }\n}\n",null,"export default class View {\n  static colors = {\n    '1': 'cyan',\n    '2': 'blue',\n    '3': 'orange',\n    '4': 'yellow',\n    '5': 'green',\n    '6': 'purple',\n    '7': 'red'\n  }  \n\n  constructor(element, width, height, rows, columns) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.context = this.canvas.getContext('2d');\n\n    this.blockWidth = this.width / columns;\n    this.blockHeight = this.height / rows;\n\n    this.element.appendChild(this.canvas);\n  }\n\n  render({ playfield }) {\n    this.clearScreen();\n    this.renderPlayfield(playfield);\n  }\n\n  clearScreen() {\n    this.context.clearRect(0, 0, this.width, this.height);\n  }\n\n  renderPlayfield(playfield) {\n    for (let y = 0; y < playfield.length; y++) {\n      const line = playfield[y];\n\n      for (let x = 0; x < line.length; x++) {\n        const block = line[x];\n\n        if (block) {\n          this.renderBlock(\n            x * this.blockWidth,\n            y * this.blockHeight,\n            this.blockWidth,\n            this.blockHeight,\n            View.colors[block]\n          );\n        }\n      }\n    }\n  }\n\n  renderBlock(x, y, width, height, color) {\n    this.context.fillStyle = color;\n    this.context.strokeStyle = 'black';\n    this.context.lineWidth = 2;\n\n    this.context.fillRect(x, y, width, height);\n    this.context.strokeRect(x, y, width, height);\n  }\n}\n","import Game from './game';\nimport View from './view';\n\nconst root = document.querySelector('#root');\n\nconst game = new Game();\nconst view = new View(root, 320, 640, 20, 10);\n\nwindow.game = game;\nwindow.view = view;\n\ndocument.addEventListener(\"keydown\", event => {\n    switch (event.keyCode) {\n        case 37: // LEFT ARROW\n            game.movePieceLeft();\n            view.render(game.getState());\n            break;\n        case 38: // UP ARROW\n            game.rotatePiece();\n            view.render(game.getState());\n            break;\n        case 39: // RIGHT ARROW\n            game.movePieceRight();\n            view.render(game.getState());\n            break;\n        case 40: // DOWN ARROW\n            game.movePieceDown();\n            view.render(game.getState());\n            break;\n    }\n})\n\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$cec85eba0a352189$exports","obj","$99d08c4d6b37c7ca$export$2e2bcd8739ae039","Game","$parcel$interopDefault","this","createPlayfield","createPiece","playfield","_activePiece","activePiece","pieceY","y","pieceX","x","blocks","y1","x1","piece","Math","floor","random","Error","hasCollision","lockPiece","updatePieces","rotateBlocks","clockwise","arguments","j","temp","undefined","nextPiece","$5d49d22315d62564$export$2e2bcd8739ae039","View","element","width","height","rows","columns","canvas","document","createElement","context","getContext","blockWidth","blockHeight","appendChild","param","clearScreen","renderPlayfield","clearRect","line","block","renderBlock","colors","color","fillStyle","strokeStyle","lineWidth","fillRect","strokeRect","$b8f9b7833fa37166$var$root","querySelector","$b8f9b7833fa37166$var$game","$b8f9b7833fa37166$var$view","window","game","view","addEventListener","event","keyCode","movePieceLeft","render","getState","rotatePiece","movePieceRight","movePieceDown"],"version":3,"file":"index.8d6c1e22.js.map"}