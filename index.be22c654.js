function e(e){return e&&e.__esModule?e.default:e}var t={};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i){t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i;return e};class i{render({playfield:e}){this.clearScreen(),this.renderPlayfield(e)}clearScreen(){this.context.clearRect(0,0,this.width,this.height)}renderPlayfield(e){for(let t=0;t<e.length;t++){const s=e[t];for(let e=0;e<s.length;e++){const c=s[e];c&&this.renderBlock(e*this.blockWidth,t*this.blockHeight,this.blockWidth,this.blockHeight,i.colors[c])}}}renderBlock(e,t,i,s,c){this.context.fillStyle=c,this.context.strokeStyle="black",this.context.lineWidth=2,this.context.fillRect(e,t,i,s),this.context.strokeRect(e,t,i,s)}constructor(e,t,i,s,c){this.element=e,this.width=t,this.height=i,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.context=this.canvas.getContext("2d"),this.blockWidth=this.width/c,this.blockHeight=this.height/s,this.element.appendChild(this.canvas)}}e(t)(i,"colors",{1:"cyan",2:"blue",3:"orange",4:"yellow",5:"green",6:"purple",7:"red"});const s=document.querySelector("#root"),c=new class{getState(){const e=this.createPlayfield(),{y:t,x:i,blocks:s}=this.activePiece;for(let t=0;t<this.playfield.length;t++){e[t]=[];for(let i=0;i<this.playfield[t].length;i++)e[t][i]=this.playfield[t][i]}for(let c=0;c<s.length;c++)for(let l=0;l<s[c].length;l++)s[c][l]&&(e[t+c][i+l]=s[c][l]);return{playfield:e}}createPlayfield(){const e=[];for(let t=0;t<20;t++){e[t]=[];for(let i=0;i<10;i++)e[t][i]=0}return e}createPiece(){const e={};switch("IJLOSTZ"[Math.floor(7*Math.random())]){case"I":e.blocks=[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]];break;case"J":e.blocks=[[0,0,0],[2,2,2],[0,0,2]];break;case"L":e.blocks=[[0,0,0],[3,3,3],[3,0,0]];break;case"O":e.blocks=[[0,0,0,0],[0,4,4,0],[0,4,4,0],[0,0,0,0]];break;case"S":e.blocks=[[0,0,0],[0,5,5],[5,5,0]];break;case"T":e.blocks=[[0,0,0],[6,6,6],[0,6,0]];break;case"Z":e.blocks=[[0,0,0],[7,7,0],[0,7,7]];break;default:throw new Error("Unknown type of figure")}return e.x=Math.floor((10-e.blocks[0].length)/2),e.y=0,e}movePieceLeft(){this.activePiece.x-=1,this.hasCollision()&&(this.activePiece.x+=1)}movePieceRight(){this.activePiece.x+=1,this.hasCollision()&&(this.activePiece.x-=1)}movePieceDown(){this.activePiece.y+=1,this.hasCollision()&&(this.activePiece.y-=1,this.lockPiece(),this.updatePieces())}rotatePiece(){this.rotateBlocks(),this.hasCollision()&&this.rotateBlocks(!1)}rotateBlocks(e=!0){const t=this.activePiece.blocks,i=t.length,s=Math.floor(i/2),c=i-1;for(let i=0;i<s;i++)for(let s=i;s<c-i;s++){const l=t[i][s];e?(t[i][s]=t[c-s][i],t[c-s][i]=t[c-i][c-s],t[c-i][c-s]=t[s][c-i],t[s][c-i]=l):(t[i][s]=t[s][c-i],t[s][c-i]=t[c-i][c-s],t[c-i][c-s]=t[c-s][i],t[c-s][i]=l)}}hasCollision(){const{y:e,x:t,blocks:i}=this.activePiece;for(let s=0;s<i.length;s++)for(let c=0;c<i.length;c++)if(i[s][c]&&(void 0===this.playfield[e+s]||void 0===this.playfield[e+s][t+c]||this.playfield[e+s][t+c]))return!0;return!1}lockPiece(){const{y:e,x:t,blocks:i}=this.activePiece;for(let s=0;s<i.length;s++)for(let c=0;c<i.length;c++)i[s][c]&&(this.playfield[e+s][t+c]=i[s][c])}updatePieces(){this.activePiece=this.nextPiece,this.nextPiece=this.createPiece()}constructor(){e(t)(this,"score",0),e(t)(this,"lines",0),e(t)(this,"level",0),e(t)(this,"playfield",this.createPlayfield()),e(t)(this,"activePiece",this.createPiece()),e(t)(this,"nextPiece",this.createPiece())}},l=new i(s,320,640,20,10);window.game=c,window.view=l,document.addEventListener("keydown",(e=>{switch(e.keyCode){case 37:c.movePieceLeft(),l.render(c.getState());break;case 38:c.rotatePiece(),l.render(c.getState());break;case 39:c.movePieceRight(),l.render(c.getState());break;case 40:c.movePieceDown(),l.render(c.getState())}}));
//# sourceMappingURL=index.be22c654.js.map
