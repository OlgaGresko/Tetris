function t(t){return t&&t.__esModule?t.default:t}var e={};Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e,i){e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i;return t};let i=Symbol.iterator;class s extends Array{hasCollision(t){for(let e of t)if(e&&(this._isOutOfBounds(e.x,e.y)||this._isOccupied(e.x,e.y)))return!0;return!1}lockPiece(t){for(let e of t)e&&(this[e.y][e.x]=e)}clearLines(){const t=this._getLinesToRemove();return this._removeLines(t)}reset(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this[t][e]=0}_getLinesToRemove(){let t=[];for(let e=this.rows-1;e>=0;e--){let i=0;for(let t=0;t<this.columns;t++)this[e][t]&&(i+=1);if(0===i)break;i<this.columns||i===this.columns&&t.unshift(e)}return t}_removeLines(t){for(let e of t)this.splice(e,1),this.unshift(new Array(this.columns).fill(0));return t.length}_isOutOfBounds(t,e){return void 0===this[e]||void 0===this[e][t]}_isOccupied(t,e){return this[e][t]}*[i](){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)yield this[t][e]}constructor(t,e){super(),this.rows=t,this.columns=e;for(let i=0;i<t;i++)this[i]=new Array(e).fill(0)}}let h=Symbol.iterator;class l{static get types(){return Object.keys(this.blocks)}static getRandomType(){const t=Math.floor(Math.random()*this.types.length);return this.types[t]}get width(){return this.blocks[0].length}get height(){return this.blocks.length}rotate(t=!0){const e=this.blocks,i=e.length,s=Math.floor(i/2),h=i-1;for(let i=0;i<s;i++)for(let s=i;s<h-i;s++){let l=e[i][s];t?(e[i][s]=e[h-s][i],e[h-s][i]=e[h-i][h-s],e[h-i][h-s]=e[s][h-i],e[s][h-i]=l):(e[i][s]=e[s][h-i],e[s][h-i]=e[h-i][h-s],e[h-i][h-s]=e[h-s][i],e[h-s][i]=l)}}*[h](){for(let t=0;t<this.blocks.length;t++)for(let e=0;e<this.blocks[t].length;e++)yield 1===this.blocks[t][e]?{x:this.x+e,y:this.y+t,type:this.type}:null}constructor(t=l.getRandomType(),e=0,i=0){if(!l.types.includes(t))throw new Error("Invalid peice type");this.type=t,this.blocks=l.blocks[this.type](),this.x=e,this.y=i}}t(e)(l,"blocks",{I:()=>[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],J:()=>[[0,0,0],[1,1,1],[0,0,1]],L:()=>[[0,0,0],[1,1,1],[1,0,0]],O:()=>[[0,0,0,0],[0,1,1,0],[0,1,1,0],[0,0,0,0]],S:()=>[[0,0,0],[0,1,1],[1,1,0]],T:()=>[[0,0,0],[1,1,1],[0,1,0]],Z:()=>[[0,0,0],[1,1,0],[0,1,1]]});class n{get level(){return Math.floor(.1*this._lines)}get state(){return{score:this._score,level:this.level,lines:this._lines,playfield:this._playfield,activePiece:this._activePiece,nextPiece:this._nextPiece,isGameOver:this._topOut}}reset(){this._score=0,this._lines=0,this._topOut=!1,this._playfield.reset(),this._updatePieces()}movePieceLeft(){this._activePiece.x-=1,this._playfield.hasCollision(this._activePiece)&&(this._activePiece.x+=1)}movePieceRight(){this._activePiece.x+=1,this._playfield.hasCollision(this._activePiece)&&(this._activePiece.x-=1)}movePieceDown(){this._topOut||(this._activePiece.y+=1,this._playfield.hasCollision(this._activePiece)&&(this._activePiece.y-=1,this._update()))}rotatePiece(){this._activePiece.rotate(),this._playfield.hasCollision(this._activePiece)&&this._activePiece.rotate(!1)}_update(){this._updatePlayfield(),this._updateScore(),this._updatePieces(),this._playfield.hasCollision(this._activePiece)&&(this._topOut=!0)}_updatePlayfield(){this._playfield.lockPiece(this._activePiece)}_updateScore(){const t=this._playfield.clearLines();t>0&&(this._score+=n.points[t]*(this.level+1),this._lines+=t)}_updatePieces(){this._activePiece=this._nextPiece||new l,this._nextPiece=new l,console.log("_updatePieces",this._activePiece,this._nextPiece),this._activePiece.x=Math.floor((this._playfield.columns-this._activePiece.width)/2),this._activePiece.y=-1}constructor(i,h){t(e)(this,"_score",0),t(e)(this,"_lines",0),t(e)(this,"_topOut",!1),t(e)(this,"_activePiece",null),t(e)(this,"_nextPiece",null),this._playfield=new s(i,h),this._updatePieces()}}t(e)(n,"points",{1:40,2:100,3:300,4:1200});class r{on(t,e){document.addEventListener(t,e)}renderStartScreen(){this.context.fillStyle="white",this.context.font='18px "Press Start 2P"',this.context.textAlign="center",this.context.textBaseline="middle",this.context.fillText("Press ENTER to Start",this.width/2,this.height/2)}renderMainScreen(t){this._clearScreen(),this._renderPlayfield(t),this._renderPanel(t),this._renderBorder()}renderPauseScreen(){this._clearScreen("rgba(0, 0, 0, 0.75)"),this.context.fillStyle="white",this.context.font='16px "Press Start 2P"',this.context.textAlign="center",this.context.textBaseline="middle",this.context.fillText("PAUSE",this.width/2,this.height/2-48),this.context.fillText("Press ENTER to Resume",this.width/2,this.height/2)}renderEndScreen({score:t}){this._clearScreen(),this.context.fillStyle="white",this.context.font='18px "Press Start 2P"',this.context.textAlign="center",this.context.textBaseline="middle",this.context.fillText("GAME OVER",this.width/2,this.height/2-48),this.context.fillText(`Score: ${t}`,this.width/2,this.height/2),this.context.fillText("Press ENTER to Restart",this.width/2,this.height/2+48)}_clearScreen(t="black"){this.context.fillStyle=t,this.context.fillRect(0,0,this.width,this.height)}_renderBorder(){this.context.strokeStyle="white",this.context.lineWidth=this.playfieldBorderWidth,this.context.strokeRect(0,0,this.playfieldWidth,this.playfieldHeight)}_renderPlayfield({playfield:t,activePiece:e}){for(let e=0;e<t.length;e++){const i=t[e];for(let s=0;s<i.length;s++){const i=t[e][s];i&&this._renderBlock({x:this.playfieldX+s*this.blockWidth,y:this.playfieldY+e*this.blockHeight,width:this.blockWidth,height:this.blockHeight,color:r.colors[i.type]})}}this._renderPiece(e,{x:this.playfieldX,y:this.playfieldY,width:this.blockWidth,height:this.blockHeight})}_renderPanel({level:t,score:e,lines:i,nextPiece:s}){this.context.textAlign="start",this.context.textBaseline="top",this.context.fillStyle="white",this.context.font='14px "Press Start 2P"',this.context.fillText(`Level: ${t}`,this.panelX,this.panelY+0),this.context.fillText(`Score: ${e}`,this.panelX,this.panelY+24),this.context.fillText(`Lines: ${i}`,this.panelX,this.panelY+48),this.context.fillText("Next:",this.panelX,this.panelY+96),this._renderPiece(s,{x:this.panelX,y:this.panelY+120,width:.5*this.blockWidth,height:.5*this.blockHeight})}_renderPiece(t,{x:e,y:i,width:s=this.blockWidth,height:h=this.blockHeight}){for(let l of t)l&&this._renderBlock({x:e+l.x*s,y:i+l.y*h,width:s,height:h,color:r.colors[l.type]})}_renderBlock({x:t,y:e,width:i,height:s,lineWidth:h=2,color:l="black"}){this.context.fillStyle=l,this.context.strokeStyle="black",this.context.lineWidth=h,this.context.fillRect(t,e,i,s),this.context.strokeRect(t,e,i,s)}constructor({element:t,width:e,height:i,rows:s,columns:h}){this.element=t,this.width=e,this.height=i,this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height,this.context=this.canvas.getContext("2d"),this.playfieldBorderWidth=4,this.playfieldX=this.playfieldBorderWidth,this.playfieldY=this.playfieldBorderWidth,this.playfieldWidth=2*this.width/3,this.playfieldHeight=this.height,this.playfieldInnerWidth=this.playfieldWidth-2*this.playfieldBorderWidth,this.playfieldInnerHeight=this.playfieldHeight-2*this.playfieldBorderWidth,this.blockWidth=this.playfieldInnerWidth/h,this.blockHeight=this.playfieldInnerHeight/s,this.panelX=this.playfieldWidth+10,this.panelY=0,this.panelWidth=this.width/3,this.panelHeight=this.height,this.element.appendChild(this.canvas)}}t(e)(r,"colors",{I:"cyan",J:"blue",L:"orange",O:"yellow",S:"green",T:"purple",Z:"red"});const o=document.querySelector("#root"),c=new n(20,10),a=new r({element:o,width:480,height:640,rows:20,columns:10});new class{update(){this._game.movePieceDown(),this._updateView()}play(){this._isPlaying=!0,this._startTimer(),this._updateView()}pause(){this._isPlaying=!1,this._stopTimer(),this._updateView()}reset(){this._game.reset(),this.play()}_updateView(){const t=this._game.state;t.isGameOver?this._view.renderEndScreen(t):this._isPlaying?this._view.renderMainScreen(t):this._view.renderPauseScreen(t)}_startTimer(){const t=1e3-100*this._game.level;this._interval||(this._interval=setInterval((()=>{this.update()}),t>0?t:100))}_stopTimer(){this._interval&&(clearInterval(this._interval),this._interval=null)}_handleKeyPress(t){if(13===t.keyCode)this._game.state.isGameOver?(console.log(this._game.state),this.reset()):this._isPlaying?this.pause():this.play()}_handleKeyDown(t){switch(t.keyCode){case 37:this._isPlaying&&this._game.movePieceLeft(),this._updateView();break;case 38:this._game.rotatePiece(),this._updateView();break;case 39:this._game.movePieceRight(),this._updateView();break;case 40:this._stopTimer(),this._game.movePieceDown(),this._updateView()}}_handleKeyUp(t){if(40===t.keyCode)this._startTimer()}constructor(t,e){this._game=t,this._view=e,this._isPlaying=!1,this._interval=null,this.update=this.update.bind(this),e.on("keypress",this._handleKeyPress.bind(this)),e.on("keydown",this._handleKeyDown.bind(this)),e.on("keyup",this._handleKeyUp.bind(this)),this._view.renderStartScreen()}}(c,a);
//# sourceMappingURL=index.32606f19.js.map
