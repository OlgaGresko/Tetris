{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/game.js","src/view.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export default class Game {\n  static points = {\n    1: 40,\n    2: 100,\n    3: 300,\n    4: 1200,\n  };\n\n  score = 0;\n  lines = 19;\n  playfield = this.createPlayfield();\n  activePiece = this.createPiece();\n  nextPiece = this.createPiece();\n\n  get level() {\n    return Math.floor(this.lines * 0.1);\n  }\n\n  getState() {\n    const playfield = this.createPlayfield();\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < this.playfield.length; y++) {\n      playfield[y] = [];\n\n      for (let x = 0; x < this.playfield[y].length; x++) {\n        playfield[y][x] = this.playfield[y][x];\n      }\n    }\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks[y].length; x++) {\n        if (blocks[y][x]) {\n          playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n\n    return {\n      playfield,\n    };\n  }\n\n  createPlayfield() {\n    const playfield = [];\n\n    for (let y = 0; y < 20; y++) {\n      playfield[y] = [];\n\n      for (let x = 0; x < 10; x++) {\n        playfield[y][x] = 0;\n      }\n    }\n\n    return playfield;\n  }\n\n  createPiece() {\n    const index = Math.floor(Math.random() * 7);\n    const type = 'IJLOSTZ'[index];\n    const piece = {};\n\n    switch (type) {\n      case 'I':\n        piece.blocks = [\n          [0, 0, 0, 0],\n          [1, 1, 1, 1],\n          [0, 0, 0, 0],\n          [0, 0, 0, 0],\n        ];\n        break;\n      case 'J':\n        piece.blocks = [\n          [0, 0, 0],\n          [2, 2, 2],\n          [0, 0, 2],\n        ];\n        break;\n      case 'L':\n        piece.blocks = [\n          [0, 0, 0],\n          [3, 3, 3],\n          [3, 0, 0],\n        ];\n        break;\n      case 'O':\n        piece.blocks = [\n          [0, 0, 0, 0],\n          [0, 4, 4, 0],\n          [0, 4, 4, 0],\n          [0, 0, 0, 0],\n        ];\n        break;\n      case 'S':\n        piece.blocks = [\n          [0, 0, 0],\n          [0, 5, 5],\n          [5, 5, 0],\n        ];\n        break;\n      case 'T':\n        piece.blocks = [\n          [0, 0, 0],\n          [6, 6, 6],\n          [0, 6, 0],\n        ];\n        break;\n      case 'Z':\n        piece.blocks = [\n          [0, 0, 0],\n          [7, 7, 0],\n          [0, 7, 7],\n        ];\n        break;\n      default:\n        throw new Error('Unknown type of figure');\n    }\n\n    piece.x = Math.floor((10 - piece.blocks[0].length) / 2);\n    piece.y = 0;\n\n    return piece;\n  }\n\n  movePieceLeft() {\n    this.activePiece.x -= 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x += 1;\n    }\n  }\n\n  movePieceRight() {\n    this.activePiece.x += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x -= 1;\n    }\n  }\n\n  movePieceDown() {\n    this.activePiece.y += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.y -= 1;\n      this.lockPiece();\n      const clearedLines = this.clearLines();\n      this.updateScore(clearedLines);\n      this.updatePieces();\n    }\n  }\n\n  rotatePiece() {\n    this.rotateBlocks();\n\n    if (this.hasCollision()) {\n      this.rotateBlocks(false);\n    }\n  }\n\n  rotateBlocks(clockwise = true) {\n    const blocks = this.activePiece.blocks;\n    const length = blocks.length;\n    const x = Math.floor(length / 2);\n    const y = length - 1;\n\n    for (let i = 0; i < x; i++) {\n      for (let j = i; j < y - i; j++) {\n        const temp = blocks[i][j];\n\n        if (clockwise) {\n          blocks[i][j] = blocks[y - j][i];\n          blocks[y - j][i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[j][y - i];\n          blocks[j][y - i] = temp;\n        } else {\n          blocks[i][j] = blocks[j][y - i];\n          blocks[j][y - i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[y - j][i];\n          blocks[y - j][i] = temp;\n        }\n      }\n    }\n  }\n\n  hasCollision() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (\n          blocks[y][x] &&\n          (this.playfield[pieceY + y] === undefined ||\n            this.playfield[pieceY + y][pieceX + x] === undefined ||\n            this.playfield[pieceY + y][pieceX + x])\n        ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  lockPiece() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (blocks[y][x]) {\n          this.playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n  }\n\n  clearLines() {\n    const rows = 20;\n    const columns = 10;\n    let lines = [];\n\n    for (let y = rows - 1; y > 0; y--) {\n      let numberOfBlocks = 0;\n\n      for (let x = 0; x < columns; x++) {\n        if (this.playfield[y][x]) {\n          numberOfBlocks += 1;\n        }\n      }\n\n      if (numberOfBlocks === 0) {\n        break;\n      }\n      if (numberOfBlocks < columns) {\n        continue;\n      }\n      if (numberOfBlocks === columns) {\n        lines.unshift(y);\n      }\n    }\n\n    for (let index of lines) {\n      this.playfield.splice(index, 1);\n      this.playfield.unshift(new Array(columns).fill(0));\n    }\n\n    return lines.length;\n  }\n\n  updateScore(clearedLines) {\n    if (clearedLines > 0) {\n      this.score += Game.points[clearedLines] * (this.level + 1);\n      this.lines += clearedLines;\n    }\n  }\n\n  updatePieces() {\n    this.activePiece = this.nextPiece;\n    this.nextPiece = this.createPiece();\n    \n  }\n}\n","export default class View {\n  static colors = {\n    '1': 'cyan',\n    '2': 'blue',\n    '3': 'orange',\n    '4': 'yellow',\n    '5': 'green',\n    '6': 'purple',\n    '7': 'red'\n  }  \n\n  constructor(element, width, height, rows, columns) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.context = this.canvas.getContext('2d');\n\n    this.blockWidth = this.width / columns;\n    this.blockHeight = this.height / rows;\n\n    this.element.appendChild(this.canvas);\n  }\n\n  render({ playfield }) {\n    this.clearScreen();\n    this.renderPlayfield(playfield);\n  }\n\n  clearScreen() {\n    this.context.clearRect(0, 0, this.width, this.height);\n  }\n\n  renderPlayfield(playfield) {\n    for (let y = 0; y < playfield.length; y++) {\n      const line = playfield[y];\n\n      for (let x = 0; x < line.length; x++) {\n        const block = line[x];\n\n        if (block) {\n          this.renderBlock(\n            x * this.blockWidth,\n            y * this.blockHeight,\n            this.blockWidth,\n            this.blockHeight,\n            View.colors[block]\n          );\n        }\n      }\n    }\n  }\n\n  renderBlock(x, y, width, height, color) {\n    this.context.fillStyle = color;\n    this.context.strokeStyle = 'black';\n    this.context.lineWidth = 2;\n\n    this.context.fillRect(x, y, width, height);\n    this.context.strokeRect(x, y, width, height);\n  }\n}\n","import Game from './game';\nimport View from './view';\n\nconst root = document.querySelector('#root');\n\nconst game = new Game();\nconst view = new View(root, 320, 640, 20, 10);\n\nwindow.game = game;\nwindow.view = view;\n\ndocument.addEventListener(\"keydown\", event => {\n    switch (event.keyCode) {\n        case 37: // LEFT ARROW\n            game.movePieceLeft();\n            view.render(game.getState());\n            break;\n        case 38: // UP ARROW\n            game.rotatePiece();\n            view.render(game.getState());\n            break;\n        case 39: // RIGHT ARROW\n            game.movePieceRight();\n            view.render(game.getState());\n            break;\n        case 40: // DOWN ARROW\n            game.movePieceDown();\n            view.render(game.getState());\n            break;\n    }\n})\n\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$91c667a13b4c74a9$export$2e2bcd8739ae039","level","Math","floor","this","lines","getState","playfield","createPlayfield","y","pieceY","x","pieceX","blocks","activePiece","length","y1","createPiece","piece","random","Error","movePieceLeft","hasCollision","movePieceRight","movePieceDown","lockPiece","clearedLines","clearLines","updateScore","updatePieces","rotatePiece","rotateBlocks","clockwise","i","j","temp","undefined","rows","numberOfBlocks","unshift","index","splice","Array","fill","score","points","nextPiece","$parcel$interopDefault","$159cd715dad6a107$export$2e2bcd8739ae039","render","clearScreen","renderPlayfield","context","clearRect","width","height","line","block","renderBlock","blockWidth","blockHeight","colors","color","fillStyle","strokeStyle","lineWidth","fillRect","strokeRect","constructor","element","columns","canvas","document","createElement","getContext","appendChild","$1f0dc3b9307be026$var$root","querySelector","$1f0dc3b9307be026$var$game","$1f0dc3b9307be026$var$view","window","game","view","addEventListener","event","keyCode"],"version":3,"file":"index.8f6072df.js.map"}