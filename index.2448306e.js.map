{"mappings":"0DACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPL,OAAOC,eAAeI,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,ECdX,MAAMK,EAAO,ICFE,MAoCbC,gBACEC,KAAKC,YAAYC,GAAK,EAElBF,KAAKG,iBACPH,KAAKC,YAAYC,GAAK,E,CAI1BE,iBACEJ,KAAKC,YAAYC,GAAK,EAElBF,KAAKG,iBACPH,KAAKC,YAAYC,GAAK,E,CAI1BG,gBACEL,KAAKC,YAAYK,GAAK,EAElBN,KAAKG,iBACPH,KAAKC,YAAYK,GAAK,EACtBN,KAAKO,Y,CAITC,cACER,KAAKS,eAEDT,KAAKG,gBACPH,KAAKS,cAAa,E,CAItBA,aAAaC,GAAY,GACvB,MAAMC,EAASX,KAAKC,YAAYU,OAC1BC,EAASD,EAAOC,OAChBV,EAAIW,KAAKC,MAAMF,EAAS,GACxBN,EAAIM,EAAS,EAEnB,IAAK,IAAIG,EAAI,EAAGA,EAAIb,EAAGa,IACrB,IAAK,IAAIC,EAAID,EAAGC,EAAIV,EAAIS,EAAGC,IAAK,CAC9B,MAAMC,EAAON,EAAOI,GAAGC,GAEnBN,GACFC,EAAOI,GAAGC,GAAKL,EAAOL,EAAIU,GAAGD,GAC7BJ,EAAOL,EAAIU,GAAGD,GAAKJ,EAAOL,EAAIS,GAAGT,EAAIU,GACrCL,EAAOL,EAAIS,GAAGT,EAAIU,GAAKL,EAAOK,GAAGV,EAAIS,GACrCJ,EAAOK,GAAGV,EAAIS,GAAKE,IAEnBN,EAAOI,GAAGC,GAAKL,EAAOK,GAAGV,EAAIS,GAC7BJ,EAAOK,GAAGV,EAAIS,GAAKJ,EAAOL,EAAIS,GAAGT,EAAIU,GACrCL,EAAOL,EAAIS,GAAGT,EAAIU,GAAKL,EAAOL,EAAIU,GAAGD,GACrCJ,EAAOL,EAAIU,GAAGD,GAAKE,E,EAM3Bd,eACE,MAAQG,EAAGY,EAAQhB,EAAGiB,EAAMR,OAAEA,GAAWX,KAAKC,YAE9C,IAAK,IAAIK,EAAI,EAAGA,EAAIK,EAAOC,OAAQN,IACjC,IAAK,IAAIJ,EAAI,EAAGA,EAAIS,EAAOC,OAAQV,IACjC,GACES,EAAOL,GAAGJ,UACsBkB,IAA/BpB,KAAKqB,UAAUH,EAASZ,SACoBc,IAA3CpB,KAAKqB,UAAUH,EAASZ,GAAGa,EAASjB,IACpCF,KAAKqB,UAAUH,EAASZ,GAAGa,EAASjB,IAEtC,OAAO,EAIb,OAAO,C,CAGTK,YACE,MAAQD,EAAGY,EAAQhB,EAAGiB,EAAMR,OAAEA,GAAWX,KAAKC,YAE9C,IAAK,IAAIK,EAAI,EAAGA,EAAIK,EAAOC,OAAQN,IACjC,IAAK,IAAIJ,EAAI,EAAGA,EAAIS,EAAOC,OAAQV,IAC7BS,EAAOL,GAAGJ,KACZF,KAAKqB,UAAUH,EAASZ,GAAGa,EAASjB,GAAKS,EAAOL,GAAGJ,G,eArH3DoB,EAAAhC,EAAA,CAAAU,KAAA,QAAQ,GACRsB,EAAAhC,EAAA,CAAAU,KAAA,QAAQ,GACRsB,EAAAhC,EAAA,CAAAU,KAAA,QAAQ,GACRsB,EAAAhC,EAAA,CAAAU,KAAA,YAAY,CACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAE9BsB,EAAAhC,EAAA,CAAAU,KAAA,cAAc,CACZE,EAAG,EACHI,EAAG,EACHK,OAAQ,CACN,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,K,GD5BbY,OAAOC,KAAO1B,EAEd2B,QAAQC,IAAI,OAAQ5B","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/index.js","src/game.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import Game from \"./game\";\n\nconst game = new Game();\n\nwindow.game = game;\n\nconsole.log('game', game)","export default class Game {\n  score = 0;\n  lines = 0;\n  level = 0;\n  playfield = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ];\n  activePiece = {\n    x: 0,\n    y: 0,\n    blocks: [\n      [0, 1, 0],\n      [1, 1, 1],\n      [0, 0, 0],\n    ],\n  };\n\n  movePieceLeft() {\n    this.activePiece.x -= 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x += 1;\n    }\n  }\n\n  movePieceRight() {\n    this.activePiece.x += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x -= 1;\n    }\n  }\n\n  movePieceDown() {\n    this.activePiece.y += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.y -= 1;\n      this.lockPiece();\n    }\n  }\n\n  rotatePiece() {\n    this.rotateBlocks();\n\n    if (this.hasCollision()) {\n      this.rotateBlocks(false);\n    }\n  }\n\n  rotateBlocks(clockwise = true) {\n    const blocks = this.activePiece.blocks;\n    const length = blocks.length;\n    const x = Math.floor(length / 2);\n    const y = length - 1;\n\n    for (let i = 0; i < x; i++) {\n      for (let j = i; j < y - i; j++) {\n        const temp = blocks[i][j];\n\n        if (clockwise) {\n          blocks[i][j] = blocks[y - j][i];\n          blocks[y - j][i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[j][y - i];\n          blocks[j][y - i] = temp;\n        } else {\n          blocks[i][j] = blocks[j][y - i];\n          blocks[j][y - i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[y - j][i];\n          blocks[y - j][i] = temp;\n        }\n      }\n    }\n  }\n\n  hasCollision() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (\n          blocks[y][x] &&\n          (this.playfield[pieceY + y] === undefined ||\n            this.playfield[pieceY + y][pieceX + x] === undefined ||\n            this.playfield[pieceY + y][pieceX + x])\n        ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  lockPiece() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (blocks[y][x]) {\n          this.playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n  }\n}\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$1f0dc3b9307be026$var$game","movePieceLeft","this","activePiece","x","hasCollision","movePieceRight","movePieceDown","y","lockPiece","rotatePiece","rotateBlocks","clockwise","blocks","length","Math","floor","i","j","temp","pieceY","pieceX","undefined","playfield","$parcel$interopDefault","window","game","console","log"],"version":3,"file":"index.2448306e.js.map"}