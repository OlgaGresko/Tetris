{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/game.js","src/view.js","src/index.js","src/controller.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export default class Game {\n  static points = {\n    1: 40,\n    2: 100,\n    3: 300,\n    4: 1200,\n  };\n\n  constructor() {\n    this.reset();\n  }\n\n  get level() {\n    return Math.floor(this.lines * 0.1);\n  }\n\n  getState() {\n    const playfield = this.createPlayfield();\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < this.playfield.length; y++) {\n      playfield[y] = [];\n\n      for (let x = 0; x < this.playfield[y].length; x++) {\n        playfield[y][x] = this.playfield[y][x];\n      }\n    }\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks[y].length; x++) {\n        if (blocks[y][x]) {\n          playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n\n    return {\n      score: this.score,\n      level: this.level,\n      lines: this.lines,\n      nextPiece: this.nextPiece,\n      playfield,\n      isGameOver: this.topOut,\n    };\n  }\n\n  reset() {\n    this.score = 0;\n    this.lines = 0;\n    this.topOut = false;\n    this.playfield = this.createPlayfield();\n    this.activePiece = this.createPiece();\n    this.nextPiece = this.createPiece();\n  }\n\n  createPlayfield() {\n    const playfield = [];\n\n    for (let y = 0; y < 20; y++) {\n      playfield[y] = [];\n\n      for (let x = 0; x < 10; x++) {\n        playfield[y][x] = 0;\n      }\n    }\n\n    return playfield;\n  }\n\n  createPiece() {\n    const index = Math.floor(Math.random() * 7);\n    const type = 'IJLOSTZ'[index];\n    const piece = {};\n\n    switch (type) {\n      case 'I':\n        piece.blocks = [\n          [0, 0, 0, 0],\n          [1, 1, 1, 1],\n          [0, 0, 0, 0],\n          [0, 0, 0, 0],\n        ];\n        break;\n      case 'J':\n        piece.blocks = [\n          [0, 0, 0],\n          [2, 2, 2],\n          [0, 0, 2],\n        ];\n        break;\n      case 'L':\n        piece.blocks = [\n          [0, 0, 0],\n          [3, 3, 3],\n          [3, 0, 0],\n        ];\n        break;\n      case 'O':\n        piece.blocks = [\n          [0, 0, 0, 0],\n          [0, 4, 4, 0],\n          [0, 4, 4, 0],\n          [0, 0, 0, 0],\n        ];\n        break;\n      case 'S':\n        piece.blocks = [\n          [0, 0, 0],\n          [0, 5, 5],\n          [5, 5, 0],\n        ];\n        break;\n      case 'T':\n        piece.blocks = [\n          [0, 0, 0],\n          [6, 6, 6],\n          [0, 6, 0],\n        ];\n        break;\n      case 'Z':\n        piece.blocks = [\n          [0, 0, 0],\n          [7, 7, 0],\n          [0, 7, 7],\n        ];\n        break;\n      default:\n        throw new Error('Unknown type of figure');\n    }\n\n    piece.x = Math.floor((10 - piece.blocks[0].length) / 2);\n    piece.y = -1;\n\n    return piece;\n  }\n\n  movePieceLeft() {\n    this.activePiece.x -= 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x += 1;\n    }\n  }\n\n  movePieceRight() {\n    this.activePiece.x += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x -= 1;\n    }\n  }\n\n  movePieceDown() {\n    if (this.topOut) return;\n\n    this.activePiece.y += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.y -= 1;\n      this.lockPiece();\n      const clearedLines = this.clearLines();\n      this.updateScore(clearedLines);\n      this.updatePieces();\n    }\n\n    if (this.hasCollision()) {\n      this.topOut = true;\n    }\n  }\n\n  rotatePiece() {\n    this.rotateBlocks();\n\n    if (this.hasCollision()) {\n      this.rotateBlocks(false);\n    }\n  }\n\n  rotateBlocks(clockwise = true) {\n    const blocks = this.activePiece.blocks;\n    const length = blocks.length;\n    const x = Math.floor(length / 2);\n    const y = length - 1;\n\n    for (let i = 0; i < x; i++) {\n      for (let j = i; j < y - i; j++) {\n        const temp = blocks[i][j];\n\n        if (clockwise) {\n          blocks[i][j] = blocks[y - j][i];\n          blocks[y - j][i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[j][y - i];\n          blocks[j][y - i] = temp;\n        } else {\n          blocks[i][j] = blocks[j][y - i];\n          blocks[j][y - i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[y - j][i];\n          blocks[y - j][i] = temp;\n        }\n      }\n    }\n  }\n\n  hasCollision() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (\n          blocks[y][x] &&\n          (this.playfield[pieceY + y] === undefined ||\n            this.playfield[pieceY + y][pieceX + x] === undefined ||\n            this.playfield[pieceY + y][pieceX + x])\n        ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  lockPiece() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (blocks[y][x]) {\n          this.playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n  }\n\n  clearLines() {\n    const rows = 20;\n    const columns = 10;\n    let lines = [];\n\n    for (let y = rows - 1; y > 0; y--) {\n      let numberOfBlocks = 0;\n\n      for (let x = 0; x < columns; x++) {\n        if (this.playfield[y][x]) {\n          numberOfBlocks += 1;\n        }\n      }\n\n      if (numberOfBlocks === 0) {\n        break;\n      }\n      if (numberOfBlocks < columns) {\n        continue;\n      }\n      if (numberOfBlocks === columns) {\n        lines.unshift(y);\n      }\n    }\n\n    for (let index of lines) {\n      this.playfield.splice(index, 1);\n      this.playfield.unshift(new Array(columns).fill(0));\n    }\n\n    return lines.length;\n  }\n\n  updateScore(clearedLines) {\n    if (clearedLines > 0) {\n      this.score += Game.points[clearedLines] * (this.level + 1);\n      this.lines += clearedLines;\n    }\n  }\n\n  updatePieces() {\n    this.activePiece = this.nextPiece;\n    this.nextPiece = this.createPiece();\n  }\n}\n","export default class View {\n  static colors = {\n    1: 'cyan',\n    2: 'blue',\n    3: 'orange',\n    4: 'yellow',\n    5: 'green',\n    6: 'purple',\n    7: 'red',\n  };\n\n  constructor(element, width, height, rows, columns) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.context = this.canvas.getContext('2d');\n\n    this.playfieldBorderWidth = 4;\n    this.playfieldX = this.playfieldBorderWidth;\n    this.playfieldY = this.playfieldBorderWidth;\n    this.playfieldWidth = this.width * 2 / 3;\n    this.playfieldHeight = this.height;\n    this.playfieldInnerWidth = this.playfieldWidth - this.playfieldBorderWidth * 2;\n    this.playfieldInnerHeight = this.playfieldHeight - this.playfieldBorderWidth * 2;\n\n    this.blockWidth = this.playfieldInnerWidth / columns;\n    this.blockHeight = this.playfieldInnerHeight / rows;\n\n    this.panelX = this.playfieldWidth + 10;\n    this.panelY = 0;\n    this.panelWidth = this.width / 3;\n    this.panelHeight = this.height;\n\n    this.element.appendChild(this.canvas);\n  }\n\n  renderMainScreen(state) {\n    this.clearScreen();\n    this.renderPlayfield(state);\n    this.renderPanel(state);\n  }\n\n   renderStartScreen() {\n    this.context.fillStyle = 'white';\n    this.context.font = '18px \"Press Start 2P\"';\n    this.context.textAlign = 'center';\n    this.context.textBaseline = 'middle';\n    this.context.fillText('Press ENTER to Start', this.width / 2, this.height / 2);\n  }\n\n  renderPauseScreen() {\n    this.context.fillStyle = 'rgba(0,0,0,0.75)';\n    this.context.fillRect(0, 0, this.width, this.height);\n\n    this.context.fillStyle = 'white';\n    this.context.font = '18px \"Press Start 2P\"';\n    this.context.textAlign = 'center';\n    this.context.textBaseline = 'middle';\n    this.context.fillText('Press ENTER to Resume', this.width / 2, this.height / 2);\n  }\n\n  renderEndScreen({ score }) {\n    this.clearScreen();\n\n    this.context.fillStyle = 'white';\n    this.context.font = '18px \"Press Start 2P\"';\n    this.context.textAlign = 'center';\n    this.context.textBaseline = 'middle';\n    this.context.fillText('GAME OVER', this.width / 2, this.height / 2 - 48);\n    this.context.fillText(`Score: ${score}`, this.width / 2, this.height / 2);\n    this.context.fillText('Press ENTER to Restart', this.width / 2, this.height / 2 + 48);\n  }\n\n  clearScreen() {\n    this.context.clearRect(0, 0, this.width, this.height);\n  }\n\n  renderPlayfield({ playfield }) {\n    for (let y = 0; y < playfield.length; y++) {\n      const line = playfield[y];\n\n      for (let x = 0; x < line.length; x++) {\n        const block = line[x];\n\n        if (block) {\n          this.renderBlock(\n            this.playfieldX + (x * this.blockWidth),\n            this.playfieldY + (y * this.blockHeight),\n            this.blockWidth,\n            this.blockHeight,\n            View.colors[block]\n          );\n        }\n      }\n    }\n\n    this.context.strokeStyle = 'white';\n    this.context.lineWidth = this.playfieldBorderWidth;\n    this.context.strokeRect(0, 0, this.playfieldWidth, this.playfieldHeight);\n\n  }\n\n  renderPanel({ level, score, lines, nextPiece }) {\n    this.context.textAlign = 'start';\n    this.context.textBaseline = 'top';\n    this.context.fillStyle = 'white';\n    this.context.font = '14px \"Press Start 2P\"';\n\n    this.context.fillText(`Score: ${score}`, this.panelX, this.panelY + 0);\n    this.context.fillText(`Lines: ${lines}`, this.panelX, this.panelY + 24);\n    this.context.fillText(`Level: ${level}`, this.panelX, this.panelY + 48);\n    this.context.fillText('Next:', this.panelX, this.panelY + 96);\n\n    for (let y = 0; y < nextPiece.blocks.length; y++) {\n      for (let x = 0; x < nextPiece.blocks[y].length; x++) {\n        const block = nextPiece.blocks[y][x];\n\n        if (block) {\n          this.renderBlock(\n            this.panelX + (x * this.blockWidth * 0.5),\n            this.panelY + 100 + (y * this.blockHeight * 0.5),\n            this.blockWidth * 0.5,\n            this.blockHeight * 0.5,\n            View.colors[block]\n          );\n        }\n      }\n    }\n  }\n\n  renderBlock(x, y, width, height, color) {\n    this.context.fillStyle = color;\n    this.context.strokeStyle = 'black';\n    this.context.lineWidth = 2;\n\n    this.context.fillRect(x, y, width, height);\n    this.context.strokeRect(x, y, width, height);\n  }\n}\n","import Game from './game';\nimport View from './view';\nimport Controller from './controller';\n\nconst root = document.querySelector('#root');\n\nconst game = new Game();\nconst view = new View(root, 480, 640, 20, 10);\nconst controller = new Controller(game, view);\n\nwindow.game = game;\nwindow.view = view;\nwindow.controller = controller;\n\n\n\n","export default class Controller {\n  constructor(game, view) {\n    this.game = game;\n    this.view = view;\n    this.intervalId = null;\n    this.isPlaying = false;\n\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n    document.addEventListener('keyup', this.handleKeyUp.bind(this));\n\n    this.view.renderStartScreen();\n  }\n\n  update() {\n    this.game.movePieceDown();\n    this.updateView();\n  }\n\n  play() {\n    this.isPlaying = true;\n    this.startTimer();\n    this.updateView();\n  }\n\n  pause() {\n    this.isPlaying = false;\n    this.stopTimer();\n    this.updateView();\n  }\n\n  reset() {\n    this.game.reset();\n    this.stopTimer();\n    this.play();\n  }\n\n  updateView() {\n    const state = this.game.getState();\n\n    if (state.isGameOver) {\n      this.view.renderEndScreen(state);\n    } else if (!this.isPlaying) {\n      this.view.renderPauseScreen();\n    } else {\n      this.view.renderMainScreen(this.game.getState());\n    }\n  }\n\n  startTimer() {\n    const speed = 1000 - this.game.getState().level * 100;\n\n    if (!this.intervalId) {\n      this.intervalId = setInterval(\n        () => {\n          this.update();\n        },\n        speed > 0 ? speed : 100\n      );\n    }\n  }\n\n  stopTimer() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  handleKeyDown(event) {\n    const state = this.game.getState();\n\n    switch (event.key) {\n      case 'Enter':\n        if (state.isGameOver) {\n          this.reset();\n        } else if (this.isPlaying) {\n          this.pause();\n        } else {\n          this.play();\n        }\n        break;\n      case 'ArrowLeft':\n        if (this.isPlaying) {\n          this.game.movePieceLeft();\n          this.updateView();\n        }\n        break;\n      case 'ArrowUp':\n        if (this.isPlaying) {\n          this.game.rotatePiece();\n          this.updateView();\n        }\n        break;\n      case 'ArrowRight':\n        if (this.isPlaying) {\n          this.game.movePieceRight();\n          this.updateView();\n        }\n        break;\n      case 'ArrowDown':\n        if (this.isPlaying) {\n          this.stopTimer();\n          this.game.movePieceDown();\n          this.updateView();\n        }\n        break;\n    }\n  }\n\n  handleKeyUp(event) {\n    switch (event.key) {\n      case 'ArrowDown':\n        this.startTimer();\n        break;\n    }\n  }\n}\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$91c667a13b4c74a9$export$2e2bcd8739ae039","level","Math","floor","this","lines","getState","playfield","createPlayfield","y","pieceY","x","pieceX","blocks","activePiece","length","y1","score","nextPiece","isGameOver","topOut","reset","createPiece","piece","random","Error","movePieceLeft","hasCollision","movePieceRight","movePieceDown","lockPiece","clearedLines","clearLines","updateScore","updatePieces","rotatePiece","rotateBlocks","clockwise","i","j","temp","undefined","rows","numberOfBlocks","unshift","index","splice","Array","fill","points","constructor","$parcel$interopDefault","$159cd715dad6a107$export$2e2bcd8739ae039","renderMainScreen","state","clearScreen","renderPlayfield","renderPanel","renderStartScreen","context","fillStyle","font","textAlign","textBaseline","fillText","width","height","renderPauseScreen","fillRect","renderEndScreen","clearRect","line","block","renderBlock","playfieldX","blockWidth","playfieldY","blockHeight","colors","strokeStyle","lineWidth","playfieldBorderWidth","strokeRect","playfieldWidth","playfieldHeight","panelX","panelY","color","element","columns","canvas","document","createElement","getContext","playfieldInnerWidth","playfieldInnerHeight","panelWidth","panelHeight","appendChild","$1f0dc3b9307be026$var$root","querySelector","$1f0dc3b9307be026$var$game","$1f0dc3b9307be026$var$view","$1f0dc3b9307be026$var$controller","update","game","updateView","play","isPlaying","startTimer","pause","stopTimer","view","speed","intervalId","setInterval","clearInterval","handleKeyDown","event","handleKeyUp","addEventListener","bind","window","controller"],"version":3,"file":"index.e0425d6f.js.map"}