{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_define_property.js","src/game.js","<<jsx-config-pragma.js>>","src/view.js","src/controller.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export default class Game {\n  static points = {\n    1: 40,\n    2: 100,\n    3: 300,\n    4: 1200,\n  };\n\n  constructor() {\n    this.reset();\n  }\n\n  get level() {\n    return Math.floor(this.lines * 0.1);\n  }\n\n  getState() {\n    const playfield = this.createPlayfield();\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < this.playfield.length; y++) {\n      playfield[y] = [];\n\n      for (let x = 0; x < this.playfield[y].length; x++) {\n        playfield[y][x] = this.playfield[y][x];\n      }\n    }\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks[y].length; x++) {\n        if (blocks[y][x]) {\n          playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n\n    return {\n      score: this.score,\n      level: this.level,\n      lines: this.lines,\n      nextPiece: this.nextPiece,\n      playfield,\n      isGameOver: this.topOut,\n    };\n  }\n\n  reset() {\n    this.score = 0;\n    this.lines = 0;\n    this.topOut = false;\n    this.playfield = this.createPlayfield();\n    this.activePiece = this.createPiece();\n    this.nextPiece = this.createPiece();\n  }\n\n  createPlayfield() {\n    const playfield = [];\n\n    for (let y = 0; y < 20; y++) {\n      playfield[y] = [];\n\n      for (let x = 0; x < 10; x++) {\n        playfield[y][x] = 0;\n      }\n    }\n\n    return playfield;\n  }\n\n  createPiece() {\n    const index = Math.floor(Math.random() * 7);\n    const type = 'IJLOSTZ'[index];\n    const piece = {};\n\n    switch (type) {\n      case 'I':\n        piece.blocks = [\n          [0, 0, 0, 0],\n          [1, 1, 1, 1],\n          [0, 0, 0, 0],\n          [0, 0, 0, 0],\n        ];\n        break;\n      case 'J':\n        piece.blocks = [\n          [0, 0, 0],\n          [2, 2, 2],\n          [0, 0, 2],\n        ];\n        break;\n      case 'L':\n        piece.blocks = [\n          [0, 0, 0],\n          [3, 3, 3],\n          [3, 0, 0],\n        ];\n        break;\n      case 'O':\n        piece.blocks = [\n          [0, 0, 0, 0],\n          [0, 4, 4, 0],\n          [0, 4, 4, 0],\n          [0, 0, 0, 0],\n        ];\n        break;\n      case 'S':\n        piece.blocks = [\n          [0, 0, 0],\n          [0, 5, 5],\n          [5, 5, 0],\n        ];\n        break;\n      case 'T':\n        piece.blocks = [\n          [0, 0, 0],\n          [6, 6, 6],\n          [0, 6, 0],\n        ];\n        break;\n      case 'Z':\n        piece.blocks = [\n          [0, 0, 0],\n          [7, 7, 0],\n          [0, 7, 7],\n        ];\n        break;\n      default:\n        throw new Error('Unknown type of figure');\n    }\n\n    piece.x = Math.floor((10 - piece.blocks[0].length) / 2);\n    piece.y = -1;\n\n    return piece;\n  }\n\n  movePieceLeft() {\n    this.activePiece.x -= 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x += 1;\n    }\n  }\n\n  movePieceRight() {\n    this.activePiece.x += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.x -= 1;\n    }\n  }\n\n  movePieceDown() {\n    if (this.topOut) return;\n\n    this.activePiece.y += 1;\n\n    if (this.hasCollision()) {\n      this.activePiece.y -= 1;\n      this.lockPiece();\n      const clearedLines = this.clearLines();\n      this.updateScore(clearedLines);\n      this.updatePieces();\n    }\n\n    if (this.hasCollision()) {\n      this.topOut = true;\n    }\n  }\n\n  rotatePiece() {\n    this.rotateBlocks();\n\n    if (this.hasCollision()) {\n      this.rotateBlocks(false);\n    }\n  }\n\n  rotateBlocks(clockwise = true) {\n    const blocks = this.activePiece.blocks;\n    const length = blocks.length;\n    const x = Math.floor(length / 2);\n    const y = length - 1;\n\n    for (let i = 0; i < x; i++) {\n      for (let j = i; j < y - i; j++) {\n        const temp = blocks[i][j];\n\n        if (clockwise) {\n          blocks[i][j] = blocks[y - j][i];\n          blocks[y - j][i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[j][y - i];\n          blocks[j][y - i] = temp;\n        } else {\n          blocks[i][j] = blocks[j][y - i];\n          blocks[j][y - i] = blocks[y - i][y - j];\n          blocks[y - i][y - j] = blocks[y - j][i];\n          blocks[y - j][i] = temp;\n        }\n      }\n    }\n  }\n\n  hasCollision() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (\n          blocks[y][x] &&\n          (this.playfield[pieceY + y] === undefined ||\n            this.playfield[pieceY + y][pieceX + x] === undefined ||\n            this.playfield[pieceY + y][pieceX + x])\n        ) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  lockPiece() {\n    const { y: pieceY, x: pieceX, blocks } = this.activePiece;\n\n    for (let y = 0; y < blocks.length; y++) {\n      for (let x = 0; x < blocks.length; x++) {\n        if (blocks[y][x]) {\n          this.playfield[pieceY + y][pieceX + x] = blocks[y][x];\n        }\n      }\n    }\n  }\n\n  clearLines() {\n    const rows = 20;\n    const columns = 10;\n    let lines = [];\n\n    for (let y = rows - 1; y > 0; y--) {\n      let numberOfBlocks = 0;\n\n      for (let x = 0; x < columns; x++) {\n        if (this.playfield[y][x]) {\n          numberOfBlocks += 1;\n        }\n      }\n\n      if (numberOfBlocks === 0) {\n        break;\n      }\n      if (numberOfBlocks < columns) {\n        continue;\n      }\n      if (numberOfBlocks === columns) {\n        lines.unshift(y);\n      }\n    }\n\n    for (let index of lines) {\n      this.playfield.splice(index, 1);\n      this.playfield.unshift(new Array(columns).fill(0));\n    }\n\n    return lines.length;\n  }\n\n  updateScore(clearedLines) {\n    if (clearedLines > 0) {\n      this.score += Game.points[clearedLines] * (this.level + 1);\n      this.lines += clearedLines;\n    }\n  }\n\n  updatePieces() {\n    this.activePiece = this.nextPiece;\n    this.nextPiece = this.createPiece();\n  }\n}\n",null,"export default class View {\n  static colors = {\n    1: 'cyan',\n    2: 'blue',\n    3: 'orange',\n    4: 'yellow',\n    5: 'green',\n    6: 'purple',\n    7: 'red',\n  };\n\n  constructor(element, width, height, rows, columns) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.context = this.canvas.getContext('2d');\n\n    this.playfieldBorderWidth = 4;\n    this.playfieldX = this.playfieldBorderWidth;\n    this.playfieldY = this.playfieldBorderWidth;\n    this.playfieldWidth = this.width * 2 / 3;\n    this.playfieldHeight = this.height;\n    this.playfieldInnerWidth = this.playfieldWidth - this.playfieldBorderWidth * 2;\n    this.playfieldInnerHeight = this.playfieldHeight - this.playfieldBorderWidth * 2;\n\n    this.blockWidth = this.playfieldInnerWidth / columns;\n    this.blockHeight = this.playfieldInnerHeight / rows;\n\n    this.panelX = this.playfieldWidth + 10;\n    this.panelY = 0;\n    this.panelWidth = this.width / 3;\n    this.panelHeight = this.height;\n\n    this.element.appendChild(this.canvas);\n  }\n\n  renderMainScreen(state) {\n    this.clearScreen();\n    this.renderPlayfield(state);\n    this.renderPanel(state);\n  }\n\n   renderStartScreen() {\n    this.context.fillStyle = 'white';\n    this.context.font = '18px \"Press Start 2P\"';\n    this.context.textAlign = 'center';\n    this.context.textBaseline = 'middle';\n    this.context.fillText('Press ENTER to Start', this.width / 2, this.height / 2);\n  }\n\n  renderPauseScreen() {\n    this.context.fillStyle = 'rgba(0,0,0,0.75)';\n    this.context.fillRect(0, 0, this.width, this.height);\n\n    this.context.fillStyle = 'white';\n    this.context.font = '18px \"Press Start 2P\"';\n    this.context.textAlign = 'center';\n    this.context.textBaseline = 'middle';\n    this.context.fillText('Press ENTER to Resume', this.width / 2, this.height / 2);\n  }\n\n  renderEndScreen({ score }) {\n    this.clearScreen();\n\n    this.context.fillStyle = 'white';\n    this.context.font = '18px \"Press Start 2P\"';\n    this.context.textAlign = 'center';\n    this.context.textBaseline = 'middle';\n    this.context.fillText('GAME OVER', this.width / 2, this.height / 2 - 48);\n    this.context.fillText(`Score: ${score}`, this.width / 2, this.height / 2);\n    this.context.fillText('Press ENTER to Restart', this.width / 2, this.height / 2 + 48);\n  }\n\n  clearScreen() {\n    this.context.clearRect(0, 0, this.width, this.height);\n  }\n\n  renderPlayfield({ playfield }) {\n    for (let y = 0; y < playfield.length; y++) {\n      const line = playfield[y];\n\n      for (let x = 0; x < line.length; x++) {\n        const block = line[x];\n\n        if (block) {\n          this.renderBlock(\n            this.playfieldX + (x * this.blockWidth),\n            this.playfieldY + (y * this.blockHeight),\n            this.blockWidth,\n            this.blockHeight,\n            View.colors[block]\n          );\n        }\n      }\n    }\n\n    this.context.strokeStyle = 'white';\n    this.context.lineWidth = this.playfieldBorderWidth;\n    this.context.strokeRect(0, 0, this.playfieldWidth, this.playfieldHeight);\n\n  }\n\n  renderPanel({ level, score, lines, nextPiece }) {\n    this.context.textAlign = 'start';\n    this.context.textBaseline = 'top';\n    this.context.fillStyle = 'white';\n    this.context.font = '14px \"Press Start 2P\"';\n\n    this.context.fillText(`Score: ${score}`, this.panelX, this.panelY + 0);\n    this.context.fillText(`Lines: ${lines}`, this.panelX, this.panelY + 24);\n    this.context.fillText(`Level: ${level}`, this.panelX, this.panelY + 48);\n    this.context.fillText('Next:', this.panelX, this.panelY + 96);\n\n    for (let y = 0; y < nextPiece.blocks.length; y++) {\n      for (let x = 0; x < nextPiece.blocks[y].length; x++) {\n        const block = nextPiece.blocks[y][x];\n\n        if (block) {\n          this.renderBlock(\n            this.panelX + (x * this.blockWidth * 0.5),\n            this.panelY + 100 + (y * this.blockHeight * 0.5),\n            this.blockWidth * 0.5,\n            this.blockHeight * 0.5,\n            View.colors[block]\n          );\n        }\n      }\n    }\n  }\n\n  renderBlock(x, y, width, height, color) {\n    this.context.fillStyle = color;\n    this.context.strokeStyle = 'black';\n    this.context.lineWidth = 2;\n\n    this.context.fillRect(x, y, width, height);\n    this.context.strokeRect(x, y, width, height);\n  }\n}\n","export default class Controller {\n  constructor(game, view) {\n    this.game = game;\n    this.view = view;\n    this.intervalId = null;\n    this.isPlaying = false;\n\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n    document.addEventListener('keyup', this.handleKeyUp.bind(this));\n\n    this.view.renderStartScreen();\n  }\n\n  update() {\n    this.game.movePieceDown();\n    this.updateView();\n  }\n\n  play() {\n    this.isPlaying = true;\n    this.startTimer();\n    this.updateView();\n  }\n\n  pause() {\n    this.isPlaying = false;\n    this.stopTimer();\n    this.updateView();\n  }\n\n  reset() {\n    this.game.reset();\n    this.stopTimer();\n    this.play();\n  }\n\n  updateView() {\n    const state = this.game.getState();\n\n    if (state.isGameOver) {\n      this.view.renderEndScreen(state);\n    } else if (!this.isPlaying) {\n      this.view.renderPauseScreen();\n    } else {\n      this.view.renderMainScreen(this.game.getState());\n    }\n  }\n\n  startTimer() {\n    const speed = 1000 - this.game.getState().level * 100;\n\n    if (!this.intervalId) {\n      this.intervalId = setInterval(\n        () => {\n          this.update();\n        },\n        speed > 0 ? speed : 100\n      );\n    }\n  }\n\n  stopTimer() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  handleKeyDown(event) {\n    const state = this.game.getState();\n\n    switch (event.key) {\n      case 'Enter':\n        if (state.isGameOver) {\n          this.reset();\n        } else if (this.isPlaying) {\n          this.pause();\n        } else {\n          this.play();\n        }\n        break;\n      case 'ArrowLeft':\n        if (this.isPlaying) {\n          this.game.movePieceLeft();\n          this.updateView();\n        }\n        break;\n      case 'ArrowUp':\n        if (this.isPlaying) {\n          this.game.rotatePiece();\n          this.updateView();\n        }\n        break;\n      case 'ArrowRight':\n        if (this.isPlaying) {\n          this.game.movePieceRight();\n          this.updateView();\n        }\n        break;\n      case 'ArrowDown':\n        if (this.isPlaying) {\n          this.stopTimer();\n          this.game.movePieceDown();\n          this.updateView();\n        }\n        break;\n    }\n  }\n\n  handleKeyUp(event) {\n    switch (event.key) {\n      case 'ArrowDown':\n        this.startTimer();\n        break;\n    }\n  }\n}\n","import Game from './game';\nimport View from './view';\nimport Controller from './controller';\n\nconst root = document.querySelector('#root');\n\nconst game = new Game();\nconst view = new View(root, 480, 640, 20, 10);\nconst controller = new Controller(game, view);\n\nwindow.game = game;\nwindow.view = view;\nwindow.controller = controller;\n\n\n\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$cec85eba0a352189$exports","obj","$99d08c4d6b37c7ca$export$2e2bcd8739ae039","Game","this","reset","Math","floor","lines","playfield","createPlayfield","_activePiece","activePiece","pieceY","y","pieceX","x","blocks","y1","x1","score","level","nextPiece","isGameOver","topOut","createPiece","piece","random","Error","hasCollision","lockPiece","clearedLines","clearLines","updateScore","updatePieces","rotateBlocks","clockwise","arguments","j","temp","undefined","rows","numberOfBlocks","unshift","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","index","splice","Array","fill","err","return","points","$parcel$interopDefault","$5d49d22315d62564$export$2e2bcd8739ae039","View","element","width","height","columns","canvas","document","createElement","context","getContext","playfieldBorderWidth","playfieldX","playfieldY","playfieldWidth","playfieldHeight","playfieldInnerWidth","playfieldInnerHeight","blockWidth","blockHeight","panelX","panelY","panelWidth","panelHeight","appendChild","state","clearScreen","renderPlayfield","renderPanel","fillStyle","font","textAlign","textBaseline","fillText","fillRect","param","concat","clearRect","line","block","renderBlock","colors","strokeStyle","lineWidth","strokeRect","color","$f287bd779c265cd1$export$2e2bcd8739ae039","Controller","game","view","intervalId","isPlaying","addEventListener","handleKeyDown","bind","handleKeyUp","renderStartScreen","movePieceDown","updateView","startTimer","stopTimer","play","getState","renderEndScreen","renderMainScreen","renderPauseScreen","speed","setInterval","_this","update","clearInterval","event","pause","movePieceLeft","rotatePiece","movePieceRight","$b8f9b7833fa37166$var$root","querySelector","$b8f9b7833fa37166$var$game","$b8f9b7833fa37166$var$view","$b8f9b7833fa37166$var$controller","window","controller"],"version":3,"file":"index.7e54e349.js.map"}