function e(e){return e&&e.__esModule?e.default:e}var i={};Object.defineProperty(i,"__esModule",{value:!0}),i.default=function(e,i,t){i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t;return e};const t=new class{movePieceLeft(){this.activePiece.x-=1,this.isPieceOutOfBounds()&&(this.activePiece.x+=1)}movePieceRight(){this.activePiece.x+=1,this.isPieceOutOfBounds()&&(this.activePiece.x-=1)}movePieceDown(){this.activePiece.y+=1,this.isPieceOutOfBounds()&&(this.activePiece.y-=1,this.lockPiece())}hasCollision(){const{y:e,x:i,blocks:t}=this.activePiece;for(let c=0;c<t.length;c++)for(let s=0;s<t.length;s++)if(t[c][s]&&(void 0===this.playfield[e+c]||void 0===this.playfield[e+c][i+s]||this.playfield[e+c][i+s]))return!0;return!1}lockPiece(){const{y:e,x:i,blocks:t}=this.activePiece;for(let c=0;c<t.length;c++)for(let s=0;s<t.length;s++)t[c][s]&&(this.playfield[e+c][i+s]=t[c][s])}constructor(){e(i)(this,"score",0),e(i)(this,"lines",0),e(i)(this,"level",0),e(i)(this,"playfield",[[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]]),e(i)(this,"activePiece",{x:0,y:0,blocks:[[0,1,0],[1,1,1],[0,0,0]]})}};window.game=t,console.log("game",t);
//# sourceMappingURL=index.de49ac27.js.map
